!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.Tridecco=t():e.Tridecco=t()}(self,()=>{return e={13:(e,t,i)=>{const s=i(114);class n{constructor(e,t={}){if(!Array.isArray(e))throw new Error("colors must be an array of strings");if(2!==e.length)throw new Error("colors must be an array of 2 strings representing the colors of the piece");if(e.some(e=>"string"!=typeof e))throw new Error("colors must be an array of strings");if(t&&("object"!=typeof t||Array.isArray(t)))throw new Error("params must be an object and not an array");Object.assign(this,t),this.colors=e,this.colorsKey=e.join("-")}equals(e){return e instanceof n&&this.colorsKey===e.colorsKey}clone(){return s(this)}toJSON(){const e=this.clone(),{colors:t,colorsKey:i,...s}=e;return{colors:t,customProperties:s}}static fromJSON(e){const{colors:t,customProperties:i}=e;return new n(t,i)}}e.exports=n},114:e=>{e.exports=function e(t,i=new WeakMap){if(null===t)return t;if("object"!=typeof t)return t;if(i.has(t))return i.get(t);const s=t.constructor;switch(s){case Date:case RegExp:return new s(t);case Map:const n=new s;i.set(t,n);for(const[s,r]of t)n.set(e(s,i),e(r,i));return n;case Set:const r=new s;i.set(t,r);for(const s of t)r.add(e(s,i));return r;case Array:const a=new s(t.length);i.set(t,a);for(let s=0;s<t.length;s++)a[s]=e(t[s],i);return a;case Object:const o=Object.getPrototypeOf(t),h=Object.create(o);i.set(t,h);for(const s of Reflect.ownKeys(t)){const n=Object.getOwnPropertyDescriptor(t,s);n&&(n.get||n.set?Object.defineProperty(h,s,{get:n.get?()=>e(n.get.call(t),i):void 0,set:n.set?t=>n.set.call(h,e(t,i)):void 0,enumerable:n.enumerable,configurable:n.configurable}):h[s]=e(n.value,i))}return h;case Function:case Symbol:return t;case WeakMap:case WeakSet:return new s;case Promise:return new s((s,n)=>{t.then(t=>s(e(t,i)),t=>n(e(t,i)))});default:if("function"==typeof t[Symbol.iterator]){const n=t[Symbol.iterator]();let r=n.next();const a=[];for(;!r.done;)a.push(e(r.value,i)),r=n.next();return new s(...a)}const l=Object.getPrototypeOf(t),d=null===l?Object.create(null):Object.create(l);i.set(t,d);for(const s of Reflect.ownKeys(t)){const n=Object.getOwnPropertyDescriptor(t,s);n&&(n.get||n.set?Object.defineProperty(d,s,{get:n.get?()=>e(n.get.call(t),i):void 0,set:n.set?t=>n.set.call(d,e(t,i)):void 0,enumerable:n.enumerable,configurable:n.configurable}):d[s]=e(n.value,i))}return d}}},303:(e,t,i)=>{const s=i(114),n=i(321),r=i(13),a=i(778);class o{constructor(e=a){if(!e)throw new Error("Map is required to initialize the board");if(!(e&&e.type&&e.columns&&e.rows&&e.positions))throw new Error("Invalid map provided");this.map=e,this.grid=new n(e.columns,e.rows,e.type),this.indexes=new Array(e.positions.length).fill(null),this.hexagons=new Set,this.hexagonColors=new Map,this.eventListeners={set:new Set,remove:new Set,form:new Set,destroy:new Set,clear:new Set},this._isCountingHexagons=!1,this.history=new Array}static POSITION_INDEXES={A:1,B:2,C:3,D:4,E:5,F:6,G:7,H:8};_triggerEvent(e,...t){if(this.eventListeners[e]){if(this._isCountingHexagons)return;this.eventListeners[e].forEach(e=>{e(...t)})}}get(e){if(e<0||e>=this.map.positions.length)throw new Error("Index out of bounds");return this.indexes[e]}set(e,t){if(e<0||e>=this.map.positions.length)throw new Error("Index out of bounds");if(!(t instanceof r))throw new Error("Value must be an instance of Piece");const i=this.map.positions[e];this.indexes[e]=t;const s=this.getRelatedHexagons(e);this.grid.set([i[o.POSITION_INDEXES.A],i[o.POSITION_INDEXES.B],i[o.POSITION_INDEXES.C],i[o.POSITION_INDEXES.D]],t.colors[0]),this.grid.set([i[o.POSITION_INDEXES.E],i[o.POSITION_INDEXES.F],i[o.POSITION_INDEXES.G],i[o.POSITION_INDEXES.H]],t.colors[1]),s.forEach(e=>{const[t,i]=e.split("-").map(Number);this.isCompleteHexagon(t,i)&&(this.hexagons.add(`${t}-${i}`),this.hexagonColors.set(`${t}-${i}`,this.grid.getHexagon(t,i)[0]))}),this.history.push({op:"set",index:e}),this._triggerEvent("set",e,t)}place(e,t){if(e<0||e>=this.map.positions.length)throw new Error("Index out of bounds");if(this.indexes[e])throw new Error("Position already occupied");if(!(t instanceof r))throw new Error("Value must be an instance of Piece");const i=new Set(this.hexagons);this.set(e,t);const s=Array.from(this.hexagons).filter(e=>!i.has(e)),n=s.map(e=>({coordinate:e.split("-").map(Number),color:this.hexagonColors.get(e)}));return s.length>0&&this._triggerEvent("form",n),n}remove(e){if(e<0||e>=this.map.positions.length)throw new Error("Index out of bounds");const t=this.map.positions[e],i=this.getRelatedHexagons(e).filter(e=>!!this.hexagons.has(e));this.grid.remove([t[o.POSITION_INDEXES.A],t[o.POSITION_INDEXES.B],t[o.POSITION_INDEXES.C],t[o.POSITION_INDEXES.D],t[o.POSITION_INDEXES.E],t[o.POSITION_INDEXES.F],t[o.POSITION_INDEXES.G],t[o.POSITION_INDEXES.H]]),i.forEach(e=>{this.hexagons.delete(e),this.hexagonColors.delete(e)}),this._triggerEvent("destroy",i.map(e=>e.split("-").map(Number)));const s=this.indexes[e];return this.history.push({op:"remove",index:e,value:s}),this.indexes[e]=null,this._triggerEvent("remove",e,s),s}getRelatedHexagons(e){if(e<0||e>=this.map.positions.length)throw new Error("Index out of bounds");const t=this.map.positions[e],i=new Set;for(let e=1;e<=o.POSITION_INDEXES.F;e++){const s=t[e];if(s){const e=`${s[0]}-${s[1]}`;i.add(e)}}return Array.from(i)}getRandomPosition(e=!1,t=[]){const i=new Set(t),s=[];return this.map.positions.forEach((t,n)=>{i.has(n)||!e&&t.isEdge||s.push(n)}),0===s.length?-1:s[Math.floor(Math.random()*s.length)]}getEmptyPositions(){const e=[];return this.indexes.forEach((t,i)=>{null===t&&e.push(i)}),e}getOccupiedPositions(){const e=this.getEmptyPositions(),t=new Set(e),i=[];return this.indexes.forEach((e,s)=>{t.has(s)||i.push(s)}),i}getAdjacentPositions(){const e=this.getOccupiedPositions(),t=new Set;return e.forEach(e=>{this.map.positions[e].adjacents.forEach(e=>{t.add(e)})}),Array.from(t)}getAvailablePositions(){const e=this.getEmptyPositions(),t=new Set(this.getAdjacentPositions());return e.filter(e=>t.has(e))}getHexagonPositions(e){if(!(e instanceof r))throw new Error("Value must be an instance of Piece");const t=this.getAvailablePositions();return t.map(t=>[t,this.countHexagonsFormed(t,e)]).filter(e=>e[1]>0).sort((e,t)=>t[1]-e[1])}getHexagonsFormed(e,t){if(e<0||e>=this.map.positions.length)throw new Error("Index out of bounds");if(!(t instanceof r))throw new Error("Value must be an instance of Piece");this._isCountingHexagons=!0;const i=this.place(e,t);return this.back(1),this._isCountingHexagons=!1,i}countHexagonsFormed(e,t){if(e<0||e>=this.map.positions.length)throw new Error("Index out of bounds");if(!(t instanceof r))throw new Error("Value must be an instance of Piece");this._isCountingHexagons=!0;const i=this.place(e,t);return this.back(1),this._isCountingHexagons=!1,i.length}isEmpty(e){if(e<0||e>=this.map.positions.length)throw new Error("Index out of bounds");return null===this.indexes[e]}isCompleteHexagon(e,t){if(e<0||e>=this.map.columns||t<0||t>=this.map.rows)throw new Error("Column or row out of bounds");const i=this.grid.getHexagon(e,t);for(let e=1;e<i.length;e++)if(null===i[e]||null===i[e-1]||i[e]!==i[e-1])return!1;return!0}getCompleteHexagons(){return Array.from(this.hexagons).map(e=>({coordinate:e.split("-").map(Number),color:this.hexagonColors.get(e)}))}addEventListener(e,t){if(!this.eventListeners[e])throw new Error("Invalid event type");this.eventListeners[e].add(t)}removeEventListener(e,t){if(!this.eventListeners[e])throw new Error("Invalid event type");this.eventListeners[e].delete(t)}back(e=1){if(e<=0)return 0;e=Math.min(e,this.history.length);for(let t=0;t<e;t++){const e=this.history.pop();if(!e)break;"set"===e.op?(this.remove(e.index),this.history.pop()):"remove"===e.op&&this.set(e.index,e.value)}return e}clone(e={}){const{withListeners:t=!1,withHistory:i=!1}=e,n=s(this);return t||(n.eventListeners={set:new Set,remove:new Set,form:new Set,destroy:new Set,clear:new Set}),i||(n.history=[]),n._isCountingHexagons=!1,n}clear(){this.grid.clear(),this.indexes.fill(null),this.hexagons.clear(),this.hexagonColors.clear(),this.history=[],this._triggerEvent("clear")}toJSON(e={}){const{withHistory:t=!1}=e,i=this.clone({withListeners:!1,withHistory:t}),{map:s,grid:n,hexagons:r,hexagonColors:a}=i;return{map:s,grid:n,indexes:i.indexes.map(e=>e?e.toJSON():null),hexagons:Array.from(r),hexagonColors:Array.from(a.entries()),history:t?i.history.map(e=>"set"===e.op?e:"remove"===e.op?{op:e.op,index:e.index,value:e.value.toJSON()}:e):[]}}static fromJSON(e){const{map:t,grid:i,indexes:s,hexagons:n,hexagonColors:a,history:h}=e,l=new o(t);return l.grid=i,l.hexagons=new Set(n),l.hexagonColors=new Map(a),l.indexes=s.map(e=>e?r.fromJSON(e):null),l.history=h.map(e=>"set"===e.op?e:"remove"===e.op?{op:e.op,index:e.index,value:r.fromJSON(e.value)}:e),l}}e.exports=o},321:(e,t,i)=>{const s=i(330);class n extends s{constructor(e,t,i){super(e,t,i)}get(e,t,i){if(i<1||i>6)throw new Error("Triangle index must be between 1 and 6");const s=super.get(e,t);return s&&s.triangles[String(i)]||null}set(e,t){e.forEach(([e,i,s])=>{if(s<1||s>6)throw new Error("Triangle index must be between 1 and 6");const n=super.get(e,i)||{triangles:{}};n.triangles[String(s)]=t,super.set(e,i,n)})}remove(e){return e.map(([e,t,i])=>{if(i<1||i>6)throw new Error("Triangle index must be between 1 and 6");const s=super.get(e,t);if(!s)return null;const n=s.triangles[String(i)]||null;return delete s.triangles[String(i)],0===Object.keys(s.triangles).length?super.set(e,t,null):super.set(e,t,s),n})}getHexagon(e,t){const i=super.get(e,t);return i?Array.from({length:6},(e,t)=>i.triangles[String(t+1)]||null):Array(6).fill(null)}setHexagon(e,t,i){const s=super.get(e,t)||{triangles:{}};i.forEach((e,t)=>{s.triangles[String(t+1)]=e}),super.set(e,t,s)}removeHexagon(e,t){const i=super.get(e,t);if(!i)return Array(6).fill(null);const s=Array.from({length:6},(e,t)=>i.triangles[String(t+1)]||null);return super.set(e,t,null),s}isFull(e,t){const i=super.get(e,t);return!!i&&6===Object.keys(i.triangles).length}clone(){const e=new n(this.columns,this.rows,this.type);return e.grid=this.grid.map(e=>e.map(e=>{if(!e)return null;const t={triangles:{}};return Object.keys(e.triangles).forEach(i=>{t.triangles[i]=e.triangles[i]}),t})),e}}e.exports=n},330:e=>{class t{constructor(e,t,i){if(!["odd-r","even-r","odd-q","even-q"].includes(i))throw new Error("Invalid grid type");this.type=i,this.grid=new Array(t);for(let i=0;i<t;i++)this.grid[i]=new Array(e).fill(null)}static OFFSET={NEGATIVE_ONE:-1,ZERO:0,ONE:1};static DIRECTION_OFFSETS={UP_LEFT:[t.OFFSET.NEGATIVE_ONE,t.OFFSET.NEGATIVE_ONE],UP:[t.OFFSET.ZERO,t.OFFSET.NEGATIVE_ONE],UP_RIGHT:[t.OFFSET.ONE,t.OFFSET.NEGATIVE_ONE],RIGHT:[t.OFFSET.ONE,t.OFFSET.ZERO],DOWN_RIGHT:[t.OFFSET.ONE,t.OFFSET.ONE],DOWN:[t.OFFSET.ZERO,t.OFFSET.ONE],DOWN_LEFT:[t.OFFSET.NEGATIVE_ONE,t.OFFSET.ONE],LEFT:[t.OFFSET.NEGATIVE_ONE,t.OFFSET.ZERO]};static DIRECTIONS={"odd-r":[[t.DIRECTION_OFFSETS.UP_LEFT,t.DIRECTION_OFFSETS.UP,t.DIRECTION_OFFSETS.RIGHT,t.DIRECTION_OFFSETS.DOWN,t.DIRECTION_OFFSETS.DOWN_LEFT,t.DIRECTION_OFFSETS.LEFT],[t.DIRECTION_OFFSETS.UP,t.DIRECTION_OFFSETS.UP_RIGHT,t.DIRECTION_OFFSETS.RIGHT,t.DIRECTION_OFFSETS.DOWN_RIGHT,t.DIRECTION_OFFSETS.DOWN,t.DIRECTION_OFFSETS.LEFT]],"even-r":[[t.DIRECTION_OFFSETS.UP,t.DIRECTION_OFFSETS.UP_RIGHT,t.DIRECTION_OFFSETS.RIGHT,t.DIRECTION_OFFSETS.DOWN_RIGHT,t.DIRECTION_OFFSETS.DOWN,t.DIRECTION_OFFSETS.LEFT],[t.DIRECTION_OFFSETS.UP_LEFT,t.DIRECTION_OFFSETS.UP,t.DIRECTION_OFFSETS.RIGHT,t.DIRECTION_OFFSETS.DOWN,t.DIRECTION_OFFSETS.DOWN_LEFT,t.DIRECTION_OFFSETS.LEFT]],"odd-q":[[t.DIRECTION_OFFSETS.UP,t.DIRECTION_OFFSETS.UP_RIGHT,t.DIRECTION_OFFSETS.RIGHT,t.DIRECTION_OFFSETS.DOWN,t.DIRECTION_OFFSETS.LEFT,t.DIRECTION_OFFSETS.UP_LEFT],[t.DIRECTION_OFFSETS.UP,t.DIRECTION_OFFSETS.RIGHT,t.DIRECTION_OFFSETS.DOWN_RIGHT,t.DIRECTION_OFFSETS.DOWN,t.DIRECTION_OFFSETS.DOWN_LEFT,t.DIRECTION_OFFSETS.LEFT]],"even-q":[[t.DIRECTION_OFFSETS.UP,t.DIRECTION_OFFSETS.RIGHT,t.DIRECTION_OFFSETS.DOWN_RIGHT,t.DIRECTION_OFFSETS.DOWN,t.DIRECTION_OFFSETS.DOWN_LEFT,t.DIRECTION_OFFSETS.LEFT],[t.DIRECTION_OFFSETS.UP,t.DIRECTION_OFFSETS.UP_RIGHT,t.DIRECTION_OFFSETS.RIGHT,t.DIRECTION_OFFSETS.DOWN,t.DIRECTION_OFFSETS.LEFT,t.DIRECTION_OFFSETS.UP_LEFT]]};get(e,t){return t<0||t>=this.grid.length||e<0||e>=this.grid[t].length?null:this.grid[t][e]}set(e,t,i){t<0||t>=this.grid.length||e<0||e>=this.grid[t].length||(this.grid[t][e]=i)}remove(e,t){if(t<0||t>=this.grid.length||e<0||e>=this.grid[t].length)return null;const i=this.grid[t][e];return this.grid[t][e]=null,i}getAdjacents(e,i){const s=t.DIRECTIONS[this.type];if(!s)throw new Error("Invalid grid type");const n=[],r=(this.type.includes("r")?i:e)%2!=0?s[1]:s[0];for(const[t,s]of r){const r=e+t,a=i+s,o=this.get(r,a);null!==o&&n.push({col:r,row:a,value:o})}return n}forEach(e){for(let t=0;t<this.grid.length;t++)for(let i=0;i<this.grid[t].length;i++)e(this.get(i,t),i,t)}clone(){const e=new t(this.grid[0].length,this.grid.length,this.type);for(let t=0;t<this.grid.length;t++)for(let i=0;i<this.grid[t].length;i++)e.set(i,t,this.get(i,t));return e}clear(){for(let e=0;e<this.grid.length;e++)for(let t=0;t<this.grid[e].length;t++)this.grid[e][t]=null}}e.exports=t},331:e=>{e.exports={height:1e3,width:1e3,tiles:[{x:136,y:120,width:160,rotation:60,flipped:!1},{x:261,y:157,width:160,rotation:120,flipped:!1},{x:375,y:139,width:160,rotation:180,flipped:!1},{x:469,y:121,width:160,rotation:60,flipped:!1},{x:613,y:134,width:160,rotation:240,flipped:!1},{x:709,y:140,width:160,rotation:180,flipped:!1},{x:822,y:193,width:160,rotation:300,flipped:!1},{x:886,y:134,width:160,rotation:120,flipped:!0},{x:126,y:210,width:160,rotation:0,flipped:!0},{x:207,y:236,width:160,rotation:180,flipped:!1},{x:321,y:290,width:160,rotation:300,flipped:!1},{x:387,y:231,width:160,rotation:120,flipped:!0},{x:458,y:285,width:160,rotation:180,flipped:!1},{x:511,y:206,width:160,rotation:120,flipped:!1},{x:624,y:258,width:160,rotation:0,flipped:!1},{x:719,y:266,width:160,rotation:60,flipped:!1},{x:862,y:278,width:160,rotation:240,flipped:!1},{x:125,y:355,width:160,rotation:0,flipped:!1},{x:220,y:362,width:160,rotation:60,flipped:!1},{x:362,y:375,width:160,rotation:240,flipped:!1},{x:459,y:382,width:160,rotation:180,flipped:!1},{x:571,y:338,width:160,rotation:300,flipped:!1},{x:654,y:385,width:160,rotation:300,flipped:!1},{x:738,y:351,width:160,rotation:240,flipped:!0},{x:821,y:384,width:160,rotation:300,flipped:!1},{x:904,y:434,width:160,rotation:300,flipped:!1},{x:126,y:451,width:160,rotation:0,flipped:!1},{x:199,y:506,width:160,rotation:300,flipped:!0},{x:262,y:448,width:160,rotation:120,flipped:!1},{x:376,y:499,width:160,rotation:0,flipped:!1},{x:469,y:506,width:160,rotation:60,flipped:!1},{x:553,y:458,width:160,rotation:60,flipped:!1},{x:695,y:471,width:160,rotation:240,flipped:!1},{x:791,y:477,width:160,rotation:180,flipped:!1},{x:115,y:616,width:160,rotation:240,flipped:!1},{x:211,y:596,width:160,rotation:0,flipped:!1},{x:324,y:578,width:160,rotation:300,flipped:!1},{x:388,y:650,width:160,rotation:60,flipped:!1},{x:458,y:596,width:160,rotation:0,flipped:!0},{x:542,y:621,width:160,rotation:180,flipped:!1},{x:593,y:543,width:160,rotation:120,flipped:!1},{x:656,y:674,width:160,rotation:300,flipped:!1},{x:708,y:596,width:160,rotation:0,flipped:!1},{x:792,y:622,width:160,rotation:180,flipped:!0},{x:862,y:567,width:160,rotation:240,flipped:!1},{x:96,y:736,width:160,rotation:120,flipped:!1},{x:210,y:692,width:160,rotation:0,flipped:!1},{x:306,y:698,width:160,rotation:60,flipped:!1},{x:459,y:740,width:160,rotation:0,flipped:!1},{x:553,y:746,width:160,rotation:60,flipped:!1},{x:698,y:759,width:160,rotation:240,flipped:!1},{x:781,y:711,width:160,rotation:240,flipped:!1},{x:874,y:718,width:160,rotation:180,flipped:!1},{x:139,y:890,width:160,rotation:60,flipped:!1},{x:181,y:784,width:160,rotation:120,flipped:!1},{x:263,y:818,width:160,rotation:60,flipped:!0},{x:346,y:784,width:160,rotation:120,flipped:!1},{x:429,y:832,width:160,rotation:120,flipped:!1},{x:511,y:866,width:160,rotation:60,flipped:!0},{x:594,y:831,width:160,rotation:120,flipped:!1},{x:679,y:880,width:160,rotation:120,flipped:!1},{x:791,y:835,width:160,rotation:0,flipped:!1},{x:887,y:843,width:160,rotation:60,flipped:!1}],hexagons:{"1-1":{x:167,y:150,width:110},"1-2":{x:167,y:248,width:110},"1-3":{x:167,y:344,width:110},"1-4":{x:167,y:440,width:110},"1-5":{x:167,y:536,width:110},"1-6":{x:167,y:633,width:110},"1-7":{x:167,y:728,width:110},"1-8":{x:167,y:825,width:110},"1-9":{x:167,y:919,width:110},"2-1":{x:250,y:199,width:110},"2-2":{x:250,y:295,width:110},"2-3":{x:250,y:391,width:110},"2-4":{x:250,y:488,width:110},"2-5":{x:250,y:584,width:110},"2-6":{x:250,y:681,width:110},"2-7":{x:250,y:777,width:110},"3-1":{x:333,y:151,width:110},"3-2":{x:333,y:247,width:110},"3-3":{x:333,y:343,width:110},"3-4":{x:333,y:440,width:110},"3-5":{x:333,y:536,width:110},"3-6":{x:333,y:633,width:110},"3-7":{x:333,y:728,width:110},"3-8":{x:333,y:825,width:110},"4-1":{x:416,y:199,width:110},"4-2":{x:416,y:295,width:110},"4-3":{x:416,y:391,width:110},"4-4":{x:416,y:488,width:110},"4-5":{x:416,y:584,width:110},"4-6":{x:416,y:681,width:110},"4-7":{x:416,y:777,width:110},"5-1":{x:499,y:151,width:110},"5-2":{x:499,y:247,width:110},"5-3":{x:499,y:343,width:110},"5-4":{x:499,y:440,width:110},"5-5":{x:499,y:536,width:110},"5-6":{x:499,y:633,width:110},"5-7":{x:499,y:728,width:110},"5-8":{x:499,y:825,width:110},"6-1":{x:582,y:199,width:110},"6-2":{x:582,y:295,width:110},"6-3":{x:582,y:391,width:110},"6-4":{x:582,y:488,width:110},"6-5":{x:582,y:584,width:110},"6-6":{x:582,y:681,width:110},"6-7":{x:582,y:777,width:110},"6-8":{x:582,y:873,width:110},"7-1":{x:665,y:151,width:110},"7-2":{x:665,y:247,width:110},"7-3":{x:665,y:343,width:110},"7-4":{x:665,y:440,width:110},"7-5":{x:665,y:536,width:110},"7-6":{x:665,y:633,width:110},"7-7":{x:665,y:728,width:110},"7-8":{x:665,y:825,width:110},"8-1":{x:749,y:199,width:110},"8-2":{x:749,y:295,width:110},"8-3":{x:749,y:391,width:110},"8-4":{x:749,y:488,width:110},"8-5":{x:749,y:584,width:110},"8-6":{x:749,y:681,width:110},"8-7":{x:749,y:777,width:110},"9-1":{x:832,y:151,width:110},"9-2":{x:832,y:247,width:110},"9-3":{x:832,y:343,width:110},"9-4":{x:832,y:440,width:110},"9-5":{x:832,y:536,width:110},"9-6":{x:832,y:633,width:110},"9-7":{x:832,y:728,width:110},"9-8":{x:832,y:825,width:110}}}},492:(e,t,i)=>{const s="https://cdn.jsdelivr.net/gh/tridecco/game-board@0.7.0/assets/",n=i(303),r=i(705),a=i(331),o=1e3,h=.5,l=-1,d="rgba(255, 255, 255, 0.5)",c="rgba(0, 0, 0, 0.5)";class g{constructor(e){if(!(e instanceof CanvasRenderingContext2D))throw new Error("context must be a CanvasRenderingContext2D instance");this.context=e,this.layers=[],this.layerMap=new Map,this.frameRequested={}}addLayer(e){if("object"!=typeof e||null===e)throw new Error("layer must be an object");if("string"!=typeof e.name)throw new Error("layer.name must be a string");if("number"!=typeof e.fps)throw new Error("layer.fps must be a number");if("function"!=typeof e.render)throw new Error("layer.render must be a function");return e.zIndex=e.zIndex||0,e.context=new OffscreenCanvas(this.context.canvas.width,this.context.canvas.height).getContext("2d",e.options||{}),e._frameInterval=0===e.fps?0:o/e.fps,e._lastRender=0,e._firstRender=0,this.layers.push(e),this.layerMap.set(e.name,e),this.layers.sort((e,t)=>e.zIndex-t.zIndex),e.context}getLayer(e){if("string"!=typeof e)throw new Error("layerName must be a string");return this.layerMap.get(e)||null}removeLayer(e){if("string"!=typeof e)throw new Error("layerName must be a string");this.layers=this.layers.filter(t=>t.name!==e),this.layerMap.delete(e),delete this.frameRequested[e]}render(e=!1){const t=performance.now();this.context.clearRect(0,0,this.context.canvas.width,this.context.canvas.height);for(const i of this.layers){const s=t-(i._lastRender||0);(e||s>=i._frameInterval)&&((e||0!==i._frameInterval)&&(i.context.clearRect(0,0,i.context.canvas.width,i.context.canvas.height),i.render({context:i.context,deltaTime:s,elapsed:t-i._firstRender,layer:i,timestamp:t}),i._lastRender=t,0===i._firstRender&&(i._firstRender=t)),this.frameRequested[i.name]?.forEach(e=>{"function"==typeof e&&e(i.context)}),this.frameRequested[i.name]?.clear()),i.zIndex<0||this.context.drawImage(i.context.canvas,0,0)}}requestAnimationFrame(e,t){if("string"!=typeof e)throw new Error("layerName must be a string");if("function"!=typeof t)throw new Error("callback must be a function");if(!this.layers.find(t=>t.name===e))throw new Error(`Layer "${e}" does not exist`);this.frameRequested[e]||(this.frameRequested[e]=new Set),this.frameRequested[e].add(t)}clear(e){if("string"!=typeof e)throw new Error("layerName must be a string");const t=this.layerMap.get(e);if(!t)throw new Error(`Layer "${e}" does not exist`);t.context.clearRect(0,0,t.context.canvas.width,t.context.canvas.height)}clearAll(){for(const e of this.layers)e.context.clearRect(0,0,e.context.canvas.width,e.context.canvas.height)}resize(){for(const e of this.layers)e.context.canvas.width=this.context.canvas.width,e.context.canvas.height=this.context.canvas.height,e.context.scale(window.devicePixelRatio||1,window.devicePixelRatio||1);this.render(!0)}}class p{constructor(e,t,i,s){this.urls={texturesIndex:e,texturesAtlas:t,background:i,grid:s},this.textures=null,this.background=null,this.grid=null}async load(){return Promise.all([this.updateTextures(this.urls.texturesIndex,this.urls.texturesAtlas),this.updateBackground(this.urls.background),this.updateGrid(this.urls.grid)])}async updateTextures(e,t){return this.urls.texturesIndex=e,this.urls.texturesAtlas=t,new Promise((i,s)=>{const n=new r(e,t,e=>{e?s(e):(this.textures=n,i())})})}async updateBackground(e){return this.urls.background=e,new Promise((t,i)=>{this.background=new Image,this.background.onload=()=>t(),this.background.onerror=i,this.background.src=e})}async updateGrid(e){return this.urls.grid=e,new Promise((t,i)=>{this.grid=new Image,this.grid.onload=()=>t(),this.grid.onerror=i,this.grid.src=e})}}class w{constructor(e){if(!(e instanceof CanvasRenderingContext2D||e instanceof OffscreenCanvasRenderingContext2D))throw new Error("context must be a CanvasRenderingContext2D or OffscreenCanvasRenderingContext2D instance");this.context=e,this.samples=[],this.maxSamples=30,this.lastTick=null,this.fps=0}tick(){const e=performance.now();if(null!==this.lastTick){const t=e-this.lastTick;this.samples.push(t),this.samples.length>this.maxSamples&&this.samples.shift();const i=this.samples.reduce((e,t)=>e+t,0)/this.samples.length;this.fps=i>0?o/i:0}this.lastTick=e}render(){const e=this.context,t=`FPS: ${this.fps.toFixed(1)}`;e.save(),e.font="14px monospace",e.textBaseline="bottom",e.textAlign="right",e.fillStyle="rgba(0,0,0,0.5)";const i=e.canvas.width-8,s=e.canvas.height-8,n=e.measureText(t).width+12;e.fillRect(i-n,s-24,n,24),e.fillStyle="#fff",e.fillText(t,i-6,s-4),e.restore()}getFPS(){return this.fps}}e.exports=class{constructor({board:e,container:t,map:i=a,texturesIndexUrl:r=s+"textures-bundle/classic/normal/index.json",texturesAtlasUrl:o=s+"textures-bundle/classic/normal/atlas.webp",backgroundUrl:h=s+"backgrounds/wooden-board.jpg",gridUrl:l=s+"grids/black.png",showFPS:d=!1},c=()=>{}){if(!(e instanceof n))throw new Error("board must be an instance of Board");if(!(t instanceof HTMLElement))throw new Error("container must be an HTMLElement");if("object"!=typeof i||null===i)throw new Error("map must be a valid map object");if("string"!=typeof r)throw new Error("texturesIndexUrl must be a string");if("string"!=typeof o)throw new Error("texturesAtlasUrl must be a string");if("string"!=typeof h)throw new Error("backgroundUrl must be a string");if("string"!=typeof l)throw new Error("gridUrl must be a string");if("function"!=typeof c)throw new Error("callback must be a function");if("undefined"==typeof window)throw new Error("Renderer can only be used in a browser environment");this._showFPS=d,this._board=e,this._layersManager,this._assetsManager,this._fpsTracker,this._map=i,this._container=t,this._canvas,this._context,this._renderingLoopId=null,this._width,this._height,this._ratio,this._widthRatio,this._heightRatio,this._dpr,this._isResizeRequested=!1,this._resizeObserverInitialized=!1,this._resizeObserver=new ResizeObserver(()=>{this._resizeObserverInitialized?(this._triggerEventListeners("resize",{canvas:{width:this._canvas.width,height:this._canvas.height},container:{width:this._container.clientWidth,height:this._container.clientHeight}}),this._isResizeRequested||(requestAnimationFrame(()=>{this._initDimensions(!0),this._isResizeRequested=!1}),this._isResizeRequested=!0)):this._resizeObserverInitialized=!0}),this._resizeObserver.observe(this._container),this._mutationObserver=new MutationObserver(e=>{for(const t of e)for(const e of t.removedNodes)if(e===this._canvas||e===this._container||e.contains&&(e.contains(this._canvas)||e.contains(this._container))){this.destroy();break}}),this._mutationObserver.observe(this._container.parentNode||this._container,{childList:!0,subtree:!0}),this._canvasEventHandlers=[],this._eventListeners={click:new Set,clickAvailable:new Set,dblclick:new Set,dblclickAvailable:new Set,mousedown:new Set,mousedownAvailable:new Set,mousemove:new Set,mousemoveAvailable:new Set,mouseup:new Set,mouseupAvailable:new Set,dragstart:new Set,dragstartAvailable:new Set,dragover:new Set,dragoverAvailable:new Set,dragend:new Set,dragendAvailable:new Set,drop:new Set,dropAvailable:new Set,touchstart:new Set,touchstartAvailable:new Set,touchmove:new Set,touchmoveAvailable:new Set,touchend:new Set,touchendAvailable:new Set,touchcancel:new Set,touchcancelAvailable:new Set,pointerdown:new Set,pointerdownAvailable:new Set,pointermove:new Set,pointermoveAvailable:new Set,pointerup:new Set,pointerupAvailable:new Set,resize:new Set},this._eventHandlers=new Map,this._flashingHexagonPositions=new Map,this._previewingPositions=new Map,this._previewingHexagonPositions=new Map,this._showingAvailablePositions=new Set,this._showingAvailablePositionsOverlayFillColor,this._isDestroyed=!1,this._init({texturesIndexUrl:r,texturesAtlasUrl:o,backgroundUrl:h,gridUrl:l}).then(()=>{c(null,this)}).catch(e=>{console.error("Error initializing Renderer:",e),c(e,null)})}async _init(e){await this._initAssets(e),this._initDimensions(),this._initEventListeners(),this._initEventHandlers(),this._initLayers(),this._initFPS(),this._layersManager.render(!0),this._startRenderingLoop()}async _initAssets(e){this._assetsManager=new p(e.texturesIndexUrl,e.texturesAtlasUrl,e.backgroundUrl,e.gridUrl);try{await this._assetsManager.load()}catch(e){throw console.error("Error loading assets:",e),e}}_initEventListeners(){[{type:"click",preventDefault:!1},{type:"dblclick",preventDefault:!1},{type:"mousedown",preventDefault:!1},{type:"mousemove",preventDefault:!1},{type:"mouseup",preventDefault:!1},{type:"dragstart",preventDefault:!0},{type:"dragover",preventDefault:!0},{type:"dragend",preventDefault:!0},{type:"drop",preventDefault:!0},{type:"touchstart",preventDefault:!0},{type:"touchmove",preventDefault:!0},{type:"touchend",preventDefault:!0},{type:"touchcancel",preventDefault:!0},{type:"pointerdown",preventDefault:!0},{type:"pointermove",preventDefault:!0},{type:"pointerup",preventDefault:!0}].forEach(({type:e,preventDefault:t})=>{const i=i=>{const s=this._dpr,n={x:i.offsetX*s,y:i.offsetY*s};t&&i.preventDefault();const r=this._getPositionFromHitmap(this._layersManager.getLayer("hitmap").context,n.x,n.y);this._triggerEventListeners(e,r);const a=this._getPositionFromHitmap(this._layersManager.getLayer("hitmap").context,n.x,n.y,!0);a!==l&&this._triggerEventListeners(`${e}Available`,a)};this._canvas.addEventListener(e,i),this._canvasEventHandlers.push({type:e,handler:i})})}_triggerEventListeners(e,...t){this._eventListeners[e]&&this._eventListeners[e].forEach(e=>{e(...t)})}_initEventHandlers(){const e=function(e,t){this._layersManager.requestAnimationFrame("pieces",i=>{this._renderPiece(i,e,t.colorsKey,this._map.tiles[e].flipped)})}.bind(this),t=function(){this._layersManager.requestAnimationFrame("pieces",e=>{this._layersManager.clear("pieces"),this._renderPlacedPieces(e)})}.bind(this),i=function(e){e.forEach(e=>{this._flashingHexagonPositions.set(`${e.coordinate[0]}-${e.coordinate[1]}`,Date.now())})}.bind(this),s=function(e){e.forEach(e=>{this._flashingHexagonPositions.delete(`${e[0]}-${e[1]}`)})}.bind(this),n=function(){this._layersManager.requestAnimationFrame("pieces",()=>{this._layersManager.clear("pieces")}),this._layersManager.requestAnimationFrame("hexagons",()=>{this._layersManager.clear("hexagons")}),this._layersManager.requestAnimationFrame("available-positions",()=>{this._layersManager.clear("available-positions")})}.bind(this);this._board.addEventListener("set",e),this._board.addEventListener("remove",t),this._board.addEventListener("form",i),this._board.addEventListener("destroy",s),this._board.addEventListener("clear",n),this._eventHandlers.set("set",e),this._eventHandlers.set("remove",t),this._eventHandlers.set("form",i),this._eventHandlers.set("destroy",s),this._eventHandlers.set("clear",n)}_initDimensions(e=!1){e||(this._canvas=document.createElement("canvas"),this._container.appendChild(this._canvas),this._container.style.position="relative",this._context=this._canvas.getContext("2d"));const t=this._container.clientWidth,i=this._container.clientHeight,s=this._map.width/this._map.height;let n,r;t/i>s?(r=i,n=r*s):(n=t,r=n/s);const a=window.devicePixelRatio||1;this._canvas.width=n*a,this._canvas.height=r*a,this._canvas.style.width=`${n}px`,this._canvas.style.height=`${r}px`,this._context.scale(a,a);const o=(t-n)*h,l=(i-r)*h;this._canvas.style.position="absolute",this._canvas.style.left=`${o}px`,this._canvas.style.top=`${l}px`,e&&this._layersManager.resize(),this._width=n,this._height=r,this._ratio=s,this._widthRatio=n/this._map.width,this._heightRatio=r/this._map.height,this._dpr=a}_initLayers(){this._layersManager=new g(this._context),this._layersManager.addLayer({name:"background",fps:0,zIndex:1,render:({context:e})=>{this._renderBackground(e)}}),this._layersManager.addLayer({name:"grid",fps:0,zIndex:2,render:({context:e})=>{this._renderGrid(e)}}),this._layersManager.addLayer({name:"pieces",fps:0,zIndex:3,render:({context:e})=>{this._renderPlacedPieces(e)}}),this._layersManager.addLayer({name:"hexagons",fps:this._assetsManager.textures.get("hexagons","loop").definition.fps,zIndex:4,render:({context:e,elapsed:t})=>{this._layersManager.clear("hexagons"),this._renderFormedHexagonsFrame(e,t)}}),this._layersManager.addLayer({name:"preview-pieces",fps:0,zIndex:5,render:({context:e})=>{this._renderPreviewingPiecePositions(e)}}),this._layersManager.addLayer({name:"preview-hexagons",fps:0,zIndex:6,render:({context:e})=>{this._renderPreviewingHexagonPositions(e)}}),this._layersManager.addLayer({name:"preview-hexagons-particle",fps:this._assetsManager.textures.get("hexagons","particle").definition.fps,zIndex:7,render:({context:e,elapsed:t})=>{this._layersManager.clear("preview-hexagons-particle"),this._renderPreviewingHexagonParticlePositionsFrame(e,t)}}),this._layersManager.addLayer({name:"available-positions",fps:0,zIndex:8,render:({context:e})=>{this._renderShowingAvailablePositions(e)}}),this._layersManager.addLayer({name:"fps",fps:this._showFPS?30:0,zIndex:9,render:()=>{this._showFPS&&this._fpsTracker&&(this._layersManager.clear("fps"),this._fpsTracker.render())}}),this._layersManager.addLayer({name:"hitmap",fps:0,zIndex:-1,render:({context:e})=>{this._renderHitmap(e)},options:{willReadFrequently:!0,initialImageSmoothingEnabled:!1,imageSmoothingEnabled:!1}}),this._layersManager.addLayer({name:"temporary",fps:0,zIndex:-1,render:()=>{},options:{willReadFrequently:!0,initialImageSmoothingEnabled:!1,imageSmoothingEnabled:!1}})}_initFPS(){this._fpsTracker=new w(this._layersManager.getLayer("fps").context)}_startRenderingLoop(){if(this._renderingLoopId)return;const e=()=>{this._layersManager.render(),this._fpsTracker.tick(),this._renderingLoopId=requestAnimationFrame(e)};this._renderingLoopId=requestAnimationFrame(e)}_stopRenderingLoop(){this._renderingLoopId&&(cancelAnimationFrame(this._renderingLoopId),this._renderingLoopId=null)}_renderBackground(e){const t=this._assetsManager.background.width/this._assetsManager.background.height;let i,s,n,r;this._width/this._height>t?(i=this._width,s=this._width/t,n=0,r=(this._height-s)*h):(s=this._height,i=this._height*t,n=(this._width-i)*h,r=0),e.drawImage(this._assetsManager.background,n,r,i,s)}_renderGrid(e){const t=this._assetsManager.grid.width/this._assetsManager.grid.height;let i,s,n,r;this._width/this._height>t?(s=this._height,i=this._height*t,n=(this._width-i)*h,r=0):(i=this._width,s=this._width/t,n=0,r=(this._height-s)*h),e.drawImage(this._assetsManager.grid,n,r,i,s)}_renderPiece(e,t,i,s,n){const r=this._map.tiles[t];if(!r)throw new Error(`Tile index ${t} out of bounds`);const a=s?`${i}-flipped`:i,o=this._assetsManager.textures.get("tiles",a);if(!o)throw new Error(`Texture key "${a}" not found in textures`);const{image:l,definition:d}=o,[c,g]=this._getPieceCoordinates(t),p=d.w,w=d.h,f=o.definition.scale||1;let u,_;void 0!==r.width&&null!==r.width?(u=r.width*this._widthRatio*f,_=void 0!==r.height&&null!==r.height?r.height*this._heightRatio*f:u*w/p):void 0!==r.height&&null!==r.height?(_=r.height*this._heightRatio*f,u=_*p/w):(u=p*this._widthRatio*f,_=w*this._heightRatio*f);const x=(r.rotation||0)*Math.PI/180;if(e.save(),e.translate(c,g),e.rotate(x),n){const t=this._layersManager.getLayer("temporary").context;t.save(),t.translate(t.canvas.width*h,t.canvas.height*h),t.drawImage(l,d.x,d.y,d.w,d.h,-u*h,-_*h,u,_),t.globalCompositeOperation="source-in",t.fillStyle=n,t.fillRect(-u*h,-_*h,u,_),t.restore(),e.drawImage(t.canvas,t.canvas.width*h-u*h,t.canvas.height*h-_*h,u,_,-u*h,-_*h,u,_),this._layersManager.clear("temporary")}else e.drawImage(l,d.x,d.y,d.w,d.h,-u*h,-_*h,u,_);e.restore()}_renderHexagon(e,t,i){const s=this._map.hexagons[`${t[0]}-${t[1]}`];if(!s)throw new Error(`Hexagon coordinate ${t} not found in map`);const{image:n,definition:r,scale:a=1}=i,[o,l]=this._getHexagonCoordinates(...t),d=r.w,c=r.h,g=s.width?s.width*this._widthRatio*a:s.height*this._heightRatio*a*d/c,p=s.height?s.height*this._heightRatio*a:s.width*this._widthRatio*a*c/d;e.drawImage(n,r.x,r.y,r.w,r.h,o-g*h,l-p*h,g,p)}_renderPreviewPiece(e,t,i,s=d){if(!i||!i.colorsKey)throw new Error("Invalid piece object for preview");const n=this._map.tiles[t];if(!n)throw new Error("Tile index out of bounds for preview");this._renderPiece(e,t,i.colorsKey,n.flipped),this._renderPiece(e,t,i.colorsKey,n.flipped,s)}_renderPlacedPieces(e){const t=this._board.indexes;for(let i=0;i<t.length;i++){const s=t[i];if(s){const t=s.colorsKey,n=this._map.tiles[i].flipped;this._renderPiece(e,i,t,n)}}}_renderFormedHexagonsFrame(e,t){const i=this._assetsManager.textures.get("hexagons","loop"),s=this._assetsManager.textures.get("hexagons","flash"),n=(s.definition.range[1]-s.definition.range[0]+1)/s.definition.fps*o,r=this._board.getCompleteHexagons();for(const a of r){const r=a.coordinate,h=a.color;let l;if(this._flashingHexagonPositions.has(`${r[0]}-${r[1]}`)&&Date.now()-this._flashingHexagonPositions.get(`${r[0]}-${r[1]}`)<n){const e=s.definition.range[1]-s.definition.range[0]+1,t=s.definition.fps,i=Date.now()-this._flashingHexagonPositions.get(`${r[0]}-${r[1]}`),n=Math.floor(i*t/o%e);l={image:s.image,scale:s.definition.scale,definition:s.definition.variants[h].frames[n]}}else{this._flashingHexagonPositions.delete(`${r[0]}-${r[1]}`);const e=i.definition.range[1]-i.definition.range[0]+1,s=i.definition.fps,n=Math.floor(t*s/o%e);l={image:i.image,scale:i.definition.scale,definition:i.definition.variants[h].frames[n]}}this._renderHexagon(e,r,l)}}_renderPreviewingPiecePositions(e){for(const[t,i]of this._previewingPositions){const[s,n,r=d]=i;this._renderPreviewPiece(e,t,n,r)}}_renderPreviewingHexagonPositions(e){for(const[t,i]of this._previewingHexagonPositions){const s=this._assetsManager.textures.get("hexagons","glow"),n={image:s.image,scale:s.definition.scale,definition:s.definition.variants[i]};this._renderHexagon(e,t,n)}}_renderPreviewingHexagonParticlePositionsFrame(e,t){const i=this._assetsManager.textures.get("hexagons","particle"),s=i.definition.range[1]-i.definition.range[0]+1,n=i.definition.fps,r=Math.floor(t*n/o%s);for(const[t]of this._previewingHexagonPositions){const s={image:i.image,scale:i.definition.scale,definition:i.definition.frames[r]};this._renderHexagon(e,t,s)}}_renderShowingAvailablePositions(e){if(0!==this._showingAvailablePositions.size){e.fillStyle=this._showingAvailablePositionsOverlayFillColor||c,e.fillRect(0,0,this._width,this._height);for(const t of this._showingAvailablePositions){const i=this._map.tiles[t];if(!i){console.warn(`Tile index ${t} out of bounds for available positions`);continue}const s=this._assetsManager.textures.get("tiles",i.flipped?"empty-flipped":"empty"),[n,r]=this._getPieceCoordinates(t),a=s.definition.w,o=s.definition.h;let l,d;void 0!==i.width&&null!==i.width?(l=i.width*this._widthRatio,d=void 0!==i.height&&null!==i.height?i.height*this._heightRatio:l*o/a):void 0!==i.height&&null!==i.height?(d=i.height*this._heightRatio,l=d*a/o):(l=a*this._widthRatio,d=o*this._heightRatio);const c=(i.rotation||0)*Math.PI/180;e.save(),e.translate(n,r),e.rotate(c),e.globalCompositeOperation="destination-out",e.drawImage(s.image,s.definition.x,s.definition.y,s.definition.w,s.definition.h,-l*h,-d*h,l,d),e.restore()}}}_renderHitmap(e){const t=this._board.map.positions.map((e,t)=>t);for(const i of t){const t=10*i+1;if(t>16777215){console.warn(`Gapped ID ${t} for index ${i} exceeds limit.`);continue}const s=`rgb(${255&t}, ${t>>8&255}, ${t>>16&255})`;this._renderPiece(e,i,"empty",this._map.tiles[i].flipped,s)}}_getPositionFromHitmap(e,t,i,s=!1){const n=e.getImageData(t,i,1,1).data,r=n[0],a=n[1],o=n[2];if(0===n[3])return l;const h=r|a<<8|o<<16;if(0===h)return l;if((h-1)%10!=0)return l;const d=(h-1)/10;return d>=0&&d<this._board.map.positions.length?s&&!new Set(this._board.getAvailablePositions()).has(d)?l:d:l}_getPieceCoordinates(e){if(e<0||e>=this._map.tiles.length)throw new Error("Tile index out of bounds");const t=this._map.tiles[e];return[t.x*this._widthRatio,t.y*this._heightRatio]}_getHexagonCoordinates(e,t){const i=this._map.hexagons[`${e}-${t}`];if(!i)throw new Error("Hexagon not found");return[i.x*this._widthRatio,i.y*this._heightRatio]}previewPiece(e,t,i=d,s=!0){if(!t||!t.colorsKey)throw new Error("Invalid piece object for preview");if(!this._map.tiles[e])throw new Error("Tile index out of bounds for preview");const n=0===this._previewingPositions.size,r=0===this._previewingHexagonPositions.size;s&&(this._previewingPositions.clear(),this._previewingHexagonPositions.clear()),this._previewingPositions.set(e,[e,t,i]),this._board.getHexagonsFormed(e,t).forEach(({coordinate:e,color:t})=>{this._previewingHexagonPositions.set(e,t)}),this._layersManager.requestAnimationFrame("preview-pieces",s=>{n?this._renderPreviewPiece(s,e,t,i):(this._layersManager.clear("preview-pieces"),this._renderPreviewingPiecePositions(s))}),this._layersManager.requestAnimationFrame("preview-hexagons",e=>{r||this._layersManager.clear("preview-hexagons"),this._renderPreviewingHexagonPositions(e)})}clearPreview(){this._previewingPositions.clear(),this._previewingHexagonPositions.clear(),this._layersManager.requestAnimationFrame("preview-pieces",()=>{this._layersManager.clear("preview-pieces")}),this._layersManager.requestAnimationFrame("preview-hexagons",()=>{this._layersManager.clear("preview-hexagons")})}showAvailablePositions(e=this._board.getAvailablePositions(),t=c,i=!0){if(!Array.isArray(e))throw new Error("positions must be an array of available position indexes");i&&this._showingAvailablePositions.clear(),e.forEach(e=>this._showingAvailablePositions.add(e)),this._showingAvailablePositionsOverlayFillColor=t,this._layersManager.requestAnimationFrame("available-positions",e=>{this._layersManager.clear("available-positions"),this._renderShowingAvailablePositions(e)})}clearAvailablePositions(){this._showingAvailablePositions.clear(),this._showingAvailablePositionsOverlayFillColor=null,this._layersManager.requestAnimationFrame("available-positions",()=>{this._layersManager.clear("available-positions")})}getPieceCoordinates(e){return this._getPieceCoordinates(e)}getPieceIndexAt(e,t){return this._getPositionFromHitmap(this._layersManager.getLayer("hitmap").context,e,t)}getHexagonCoordinates(e,t){return this._getHexagonCoordinates(e,t)}getTexture(e,t){if(!this._assetsManager||!this._assetsManager.textures)throw new Error("Assets manager not initialized");return this._assetsManager.textures.get(e,t)}async updateBackground(e){if("string"!=typeof e)throw new Error("backgroundUrl must be a string");return new Promise(async(t,i)=>{await this._assetsManager.updateBackground(e).then(()=>{this._layersManager.requestAnimationFrame("background",e=>{this._layersManager.clear("background"),this._renderBackground(e)}),t()}).catch(e=>{i(e)})})}async updateGrid(e){if("string"!=typeof e)throw new Error("gridUrl must be a string");return new Promise(async(t,i)=>{await this._assetsManager.updateGrid(e).then(()=>{this._layersManager.requestAnimationFrame("grid",e=>{this._layersManager.clear("grid"),this._renderGrid(e)}),t()}).catch(e=>{i(e)})})}async updateTextures(e,t){if("string"!=typeof e)throw new Error("texturesIndexUrl must be a string");if("string"!=typeof t)throw new Error("texturesAtlasUrl must be a string");return new Promise(async(i,s)=>{await this._assetsManager.updateTextures(e,t).then(()=>{this._layersManager.requestAnimationFrame("pieces",e=>{this._layersManager.clear("pieces"),this._renderPlacedPieces(e)}),this._layersManager.removeLayer("hexagons"),this._layersManager.addLayer({name:"hexagons",fps:this._assetsManager.textures.get("hexagons","loop").definition.fps,zIndex:4,render:({context:e,elapsed:t})=>{this._layersManager.clear("hexagons"),this._renderFormedHexagonsFrame(e,t)}}),this._layersManager.requestAnimationFrame("preview-pieces",e=>{this._layersManager.clear("preview-pieces"),this._renderPreviewingPiecePositions(e)}),this._layersManager.requestAnimationFrame("preview-hexagons",e=>{0===this._previewingHexagonPositions.size||this._layersManager.clear("preview-hexagons"),this._renderPreviewingHexagonPositions(e)}),this._layersManager.removeLayer("preview-hexagons-particle"),this._layersManager.addLayer({name:"preview-hexagons-particle",fps:this._assetsManager.textures.get("hexagons","particle").definition.fps,zIndex:7,render:({context:e,elapsed:t})=>{this._layersManager.clear("preview-hexagons-particle"),this._renderPreviewingHexagonParticlePositionsFrame(e,t)}}),this._layersManager.requestAnimationFrame("available-positions",e=>{this._layersManager.clear("available-positions"),this._renderShowingAvailablePositions(e)}),this._layersManager.requestAnimationFrame("hitmap",e=>{this._layersManager.clear("hitmap"),this._renderHitmap(e)}),i()}).catch(e=>{s(e)})})}updateMap(e){if(!e||"object"!=typeof e)throw new Error("newMap must be a valid map object");this._map=e,this._previewingPositions.clear(),this._previewingHexagonPositions.clear(),this._showingAvailablePositions.clear(),this._initDimensions(!0)}updateBoard(e){if(!(e instanceof n))throw new Error("newBoard must be an instance of Board");this._previewingPositions.clear(),this._previewingHexagonPositions.clear();for(const[e,t]of this._eventHandlers.entries())this._board.removeEventListener(e,t);this._eventHandlers.clear(),this._board=e,this._initEventHandlers(),this._layersManager.requestAnimationFrame("pieces",e=>{this._layersManager.clear("pieces"),this._renderPlacedPieces(e)}),this._layersManager.requestAnimationFrame("preview-pieces",e=>{this._layersManager.clear("preview-pieces")}),this._layersManager.requestAnimationFrame("preview-hexagons",e=>{this._layersManager.clear("preview-hexagons")})}addEventListener(e,t,i={}){if(!this._eventListeners[e]||e.endsWith("Available"))throw new Error("Invalid event type");"resize"!==e&&i.onlyAvailable?this._eventListeners[`${e}Available`].add(t):this._eventListeners[e].add(t)}removeEventListener(e,t){if(!this._eventListeners[e]||e.endsWith("Available"))throw new Error("Invalid event type");this._eventListeners[e].delete(t),"resize"!==e&&this._eventListeners[`${e}Available`].delete(t)}getFPS(){return this._fpsTracker?this._fpsTracker.getFPS():null}destroy(){if(!this._isDestroyed){if(this._isDestroyed=!0,this._stopRenderingLoop(),this._canvas&&(this._canvasEventHandlers.forEach(e=>{this._canvas.removeEventListener(e.event,e.callback)}),this._canvasEventHandlers=[]),this._resizeObserver){try{this._resizeObserver.disconnect()}catch(e){}this._resizeObserver=null}if(this._mutationObserver){try{this._mutationObserver.disconnect()}catch(e){}this._mutationObserver=null}if(this._eventListeners&&(Object.values(this._eventListeners).forEach(e=>e.clear&&e.clear()),this._eventListeners=null),this._board&&this._eventHandlers){for(const[e,t]of this._eventHandlers.entries())this._board.removeEventListener(e,t);this._eventHandlers.clear(),this._eventHandlers=null}if(this._layersManager&&("function"==typeof this._layersManager.clearAll&&this._layersManager.clearAll(),this._layersManager.layers=[],this._layersManager.layerMap=new Map,this._layersManager.frameRequested={},this._layersManager=null),this._assetsManager&&(this._assetsManager.textures=null,this._assetsManager.background=null,this._assetsManager.grid=null,this._assetsManager=null),this._fpsTracker=null,this._flashingHexagonPositions&&this._flashingHexagonPositions.clear(),this._previewingPositions&&this._previewingPositions.clear(),this._previewingHexagonPositions&&this._previewingHexagonPositions.clear(),this._showingAvailablePositions&&this._showingAvailablePositions.clear(),this._canvas&&this._container&&this._container.contains(this._canvas))try{this._container.removeChild(this._canvas)}catch(e){}this._canvas=null,this._context=null,this._container=null,this._board=null,this._map=null,this._width=null,this._height=null,this._ratio=null,this._widthRatio=null,this._heightRatio=null,this._dpr=null,this._showingAvailablePositionsOverlayFillColor=null}}}},705:e=>{e.exports=class{constructor(e,t,i=()=>{}){if("string"!=typeof e)throw new Error("indexUrl must be a string representing the URL of the texture index file");if("string"!=typeof t)throw new Error("atlasUrl must be a string representing the URL of the atlas image file");if("function"!=typeof i)throw new Error("callback must be a function");if("undefined"==typeof window)throw new Error("TexturePack can only be used in a browser environment");this.atlasImage=null,this.textureDefinitions={tiles:null,hexagons:null},this.loadTextures(e,t,i)}loadTextures(e,t,i){fetch(e).then(t=>{if(!t.ok)throw new Error(`Failed to fetch texture index from ${e}`);return t.json()}).then(e=>{this.textureDefinitions.tiles=e.tiles||{},this.textureDefinitions.hexagons=e.hexagons||{};const s=new Image;s.crossOrigin="anonymous",s.onload=()=>{this.atlasImage=s,i(null,this)},s.onerror=e=>{const s=new Error(`Failed to load atlas image from: ${t}`);console.error(s.message,e),i(s,null)},s.src=t}).catch(e=>{console.error("Error loading texture definitions:",e),i(e,null)})}get(e,t){if(!this.atlasImage||!this.textureDefinitions.tiles||!this.textureDefinitions.hexagons)return console.warn("TexturePack not fully loaded. Atlas image or definitions are missing."),null;const i=t.split(".");let s=this.textureDefinitions[e];if(!s)return console.error(`Invalid texture category: ${e}`),null;let n=null;for(let e=0;e<i.length;e++){const t=i[e];if(!s||"object"!=typeof s){s=void 0;break}if(("static"===s.type||"animated"===s.type)&&s.variants&&s.variants.hasOwnProperty(t))n="animated"===s.type?s:null,s=s.variants[t];else{if(!s.hasOwnProperty(t)){s=void 0;break}s=s[t],s&&"animated"===s.type?s.variants&&!s.frames?n=s:s.frames&&(n=null):n=null}}let r=s;if(void 0===r)return console.warn(`Texture definition not found for type: ${e}, key: ${t}`),null;if(!(n&&r&&"object"==typeof r&&r.frames)||r.hasOwnProperty("fps")&&r.hasOwnProperty("range")||(r={...r,fps:r.hasOwnProperty("fps")?r.fps:n.fps,range:r.hasOwnProperty("range")?r.range:n.range,scale:r.hasOwnProperty("scale")?r.scale:n.scale}),"object"==typeof r&&null!==r){const e={image:this.atlasImage,definition:r};if(r.hasOwnProperty("scale")?e.scale=r.scale:n&&n.hasOwnProperty("scale")&&(e.scale=n.scale),r.hasOwnProperty("x")&&r.hasOwnProperty("y")&&r.hasOwnProperty("w")&&r.hasOwnProperty("h"))return e;if(r.hasOwnProperty("frames")&&r.hasOwnProperty("fps")&&r.hasOwnProperty("range"))return e;if(r.hasOwnProperty("type"))return e}return console.warn(`Final resolved definition for type '${e}', key '${t}' is not a recognized texture, typed group, or animation object:`,r),null}}},778:e=>{e.exports={type:"even-q",columns:11,rows:10,positions:[{1:[1,0,6],2:[1,0,5],3:[0,0,3],4:[0,0,4],5:[1,1,6],6:[1,1,1],7:[1,1,2],8:[1,1,3],adjacents:[1,8],isEdge:!0},{1:[3,1,1],2:[3,1,6],3:[2,0,4],4:[2,0,5],5:[2,1,1],6:[2,1,2],7:[2,1,3],8:[2,1,4],adjacents:[0,2,9,10],isEdge:!0},{1:[4,1,2],2:[4,1,1],3:[4,0,5],4:[4,0,6],5:[3,1,2],6:[3,1,3],7:[3,1,4],8:[3,1,5],adjacents:[1,3,10,11],isEdge:!0},{1:[5,0,6],2:[5,0,5],3:[4,0,3],4:[4,0,4],5:[5,1,6],6:[5,1,1],7:[5,1,2],8:[5,1,3],adjacents:[2,4,13],isEdge:!0},{1:[6,1,3],2:[6,1,2],3:[7,1,6],4:[7,1,1],5:[6,0,3],6:[6,0,4],7:[6,0,5],8:[6,0,6],adjacents:[3,5,13,14],isEdge:!0},{1:[8,1,2],2:[8,1,1],3:[8,0,5],4:[8,0,6],5:[7,1,2],6:[7,1,3],7:[7,1,4],8:[7,1,5],adjacents:[4,6,14,15],isEdge:!0},{1:[8,1,4],2:[8,1,3],3:[9,2,1],4:[9,2,2],5:[9,1,4],6:[9,1,5],7:[9,1,6],8:[9,1,1],adjacents:[5,7,15,16],isEdge:!0},{1:[10,1,6],2:[10,1,1],3:[9,1,3],4:[9,1,2],5:[10,0,6],6:[10,0,5],7:[10,0,4],8:[10,0,3],adjacents:[6],isEdge:!0},{1:[1,1,4],2:[1,1,5],3:[1,2,1],4:[1,2,6],5:[0,1,4],6:[0,1,3],7:[0,1,2],8:[0,1,1],adjacents:[0,9],isEdge:!0},{1:[2,2,2],2:[2,2,1],3:[2,1,5],4:[2,1,6],5:[1,2,2],6:[1,2,3],7:[1,2,4],8:[1,2,5],adjacents:[1,8,10,17,18],isEdge:!0},{1:[2,2,4],2:[2,2,3],3:[3,3,1],4:[3,3,2],5:[3,2,4],6:[3,2,5],7:[3,2,6],8:[3,2,1],adjacents:[1,2,9,11,18,19],isEdge:!1},{1:[4,2,6],2:[4,2,1],3:[3,2,3],4:[3,2,2],5:[4,1,6],6:[4,1,5],7:[4,1,4],8:[4,1,3],adjacents:[2,10,12,13],isEdge:!1},{1:[5,3,2],2:[5,3,1],3:[5,2,5],4:[5,2,6],5:[4,2,2],6:[4,2,3],7:[4,2,4],8:[4,2,5],adjacents:[11,13,19,20,21],isEdge:!1},{1:[6,1,1],2:[6,1,6],3:[5,1,4],4:[5,1,5],5:[5,2,1],6:[5,2,2],7:[5,2,3],8:[5,2,4],adjacents:[3,4,11,12,14,21],isEdge:!1},{1:[6,1,5],2:[6,1,4],3:[6,2,2],4:[6,2,3],5:[7,2,5],6:[7,2,6],7:[7,2,1],8:[7,2,2],adjacents:[4,5,13,15,21,22],isEdge:!1},{1:[8,1,6],2:[8,1,5],3:[7,2,3],4:[7,2,4],5:[8,2,6],6:[8,2,1],7:[8,2,2],8:[8,2,3],adjacents:[5,6,14,16,23,24],isEdge:!1},{1:[9,3,3],2:[9,3,2],3:[10,2,6],4:[10,2,1],5:[9,2,3],6:[9,2,4],7:[9,2,5],8:[9,2,6],adjacents:[6,15,24,25],isEdge:!0},{1:[0,2,5],2:[0,2,4],3:[0,3,2],4:[0,3,3],5:[1,3,5],6:[1,3,6],7:[1,3,1],8:[1,3,2],adjacents:[9,18,26],isEdge:!0},{1:[2,2,6],2:[2,2,5],3:[1,3,3],4:[1,3,4],5:[2,3,6],6:[2,3,1],7:[2,3,2],8:[2,3,3],adjacents:[9,10,17,19,26,28],isEdge:!1},{1:[3,4,3],2:[3,4,2],3:[4,3,6],4:[4,3,1],5:[3,3,3],6:[3,3,4],7:[3,3,5],8:[3,3,6],adjacents:[10,12,18,20,28,29],isEdge:!1},{1:[5,4,2],2:[5,4,1],3:[5,3,5],4:[5,3,6],5:[4,3,2],6:[4,3,3],7:[4,3,4],8:[4,3,5],adjacents:[12,19,21,29,30,31],isEdge:!1},{1:[5,3,4],2:[5,3,3],3:[6,3,1],4:[6,3,2],5:[6,2,4],6:[6,2,5],7:[6,2,6],8:[6,2,1],adjacents:[12,13,14,20,22,31],isEdge:!1},{1:[6,3,4],2:[6,3,3],3:[7,4,1],4:[7,4,2],5:[7,3,4],6:[7,3,5],7:[7,3,6],8:[7,3,1],adjacents:[14,21,23,31,32],isEdge:!1},{1:[7,3,2],2:[7,3,3],3:[8,2,5],4:[8,2,4],5:[8,3,2],6:[8,3,1],7:[8,3,6],8:[8,3,5],adjacents:[15,22,24,32],isEdge:!1},{1:[8,3,4],2:[8,3,3],3:[9,4,1],4:[9,4,2],5:[9,3,4],6:[9,3,5],7:[9,3,6],8:[9,3,1],adjacents:[15,16,23,25,33],isEdge:!1},{1:[9,4,4],2:[9,4,3],3:[10,4,1],4:[10,4,2],5:[10,3,4],6:[10,3,5],7:[10,3,6],8:[10,3,1],adjacents:[16,24,33],isEdge:!0},{1:[0,3,5],2:[0,3,4],3:[0,4,2],4:[0,4,3],5:[1,4,5],6:[1,4,6],7:[1,4,1],8:[1,4,2],adjacents:[17,18,27],isEdge:!0},{1:[1,4,3],2:[1,4,4],3:[2,4,6],4:[2,4,5],5:[1,5,3],6:[1,5,2],7:[1,5,1],8:[1,5,6],adjacents:[26,28,35],isEdge:!0},{1:[3,4,1],2:[3,4,6],3:[2,3,4],4:[2,3,5],5:[2,4,1],6:[2,4,2],7:[2,4,3],8:[2,4,4],adjacents:[18,19,27,29,35,36],isEdge:!1},{1:[3,4,5],2:[3,4,4],3:[3,5,2],4:[3,5,3],5:[4,4,5],6:[4,4,6],7:[4,4,1],8:[4,4,2],adjacents:[19,20,28,30,36,38],isEdge:!1},{1:[5,4,6],2:[5,4,5],3:[4,4,3],4:[4,4,4],5:[5,5,6],6:[5,5,1],7:[5,5,2],8:[5,5,3],adjacents:[20,29,31,38,40],isEdge:!1},{1:[6,3,6],2:[6,3,5],3:[5,4,3],4:[5,4,4],5:[6,4,6],6:[6,4,1],7:[6,4,2],8:[6,4,3],adjacents:[20,21,22,30,32,40],isEdge:!1},{1:[7,5,3],2:[7,5,2],3:[8,4,6],4:[8,4,1],5:[7,4,3],6:[7,4,4],7:[7,4,5],8:[7,4,6],adjacents:[22,23,31,33,40,42],isEdge:!1},{1:[9,5,2],2:[9,5,1],3:[9,4,5],4:[9,4,6],5:[8,4,2],6:[8,4,3],7:[8,4,4],8:[8,4,5],adjacents:[24,25,32,42,44],isEdge:!0},{1:[0,6,3],2:[0,6,2],3:[1,6,6],4:[1,6,1],5:[0,5,3],6:[0,5,4],7:[0,5,5],8:[0,5,6],adjacents:[35,45,46],isEdge:!0},{1:[1,5,5],2:[1,5,4],3:[1,6,2],4:[1,6,3],5:[2,5,5],6:[2,5,6],7:[2,5,1],8:[2,5,2],adjacents:[27,28,34,36,46],isEdge:!1},{1:[2,5,4],2:[2,5,3],3:[3,6,1],4:[3,6,2],5:[3,5,4],6:[3,5,5],7:[3,5,6],8:[3,5,1],adjacents:[28,29,35,37,46,47],isEdge:!1},{1:[4,5,6],2:[4,5,5],3:[3,6,3],4:[3,6,4],5:[4,6,6],6:[4,6,1],7:[4,6,2],8:[4,6,3],adjacents:[36,38,39,47,48],isEdge:!1},{1:[5,5,4],2:[5,5,5],3:[5,6,1],4:[5,6,6],5:[4,5,4],6:[4,5,3],7:[4,5,2],8:[4,5,1],adjacents:[29,30,37,39],isEdge:!1},{1:[6,6,2],2:[6,6,1],3:[6,5,5],4:[6,5,6],5:[5,6,2],6:[5,6,3],7:[5,6,4],8:[5,6,5],adjacents:[37,38,40,41,48,49],isEdge:!1},{1:[7,5,1],2:[7,5,6],3:[6,4,4],4:[6,4,5],5:[6,5,1],6:[6,5,2],7:[6,5,3],8:[6,5,4],adjacents:[30,31,32,39,41,42],isEdge:!1},{1:[6,6,4],2:[6,6,3],3:[7,7,1],4:[7,7,2],5:[7,6,4],6:[7,6,5],7:[7,6,6],8:[7,6,1],adjacents:[39,40,42,49,50,51],isEdge:!1},{1:[7,5,5],2:[7,5,4],3:[7,6,2],4:[7,6,3],5:[8,5,5],6:[8,5,6],7:[8,5,1],8:[8,5,2],adjacents:[32,33,40,41,43,44],isEdge:!1},{1:[8,6,1],2:[8,6,2],3:[8,5,4],4:[8,5,3],5:[9,6,1],6:[9,6,6],7:[9,6,5],8:[9,6,4],adjacents:[42,44,51,52],isEdge:!1},{1:[9,6,3],2:[9,6,2],3:[10,5,6],4:[10,5,1],5:[9,5,3],6:[9,5,4],7:[9,5,5],8:[9,5,6],adjacents:[33,42,43],isEdge:!0},{1:[1,7,1],2:[1,7,6],3:[0,6,4],4:[0,6,5],5:[0,7,1],6:[0,7,2],7:[0,7,3],8:[0,7,4],adjacents:[34,46,53,54],isEdge:!0},{1:[1,6,5],2:[1,6,4],3:[1,7,2],4:[1,7,3],5:[2,6,5],6:[2,6,6],7:[2,6,1],8:[2,6,2],adjacents:[34,35,36,45,47,54],isEdge:!1},{1:[3,6,6],2:[3,6,5],3:[2,6,3],4:[2,6,4],5:[3,7,6],6:[3,7,1],7:[3,7,2],8:[3,7,3],adjacents:[36,37,46,48,55,56],isEdge:!1},{1:[4,6,5],2:[4,6,4],3:[4,7,2],4:[4,7,3],5:[5,7,5],6:[5,7,6],7:[5,7,1],8:[5,7,2],adjacents:[37,39,47,49,56,57],isEdge:!1},{1:[6,6,6],2:[6,6,5],3:[5,7,3],4:[5,7,4],5:[6,7,6],6:[6,7,1],7:[6,7,2],8:[6,7,3],adjacents:[39,41,48,50,58,59],isEdge:!1},{1:[7,8,3],2:[7,8,2],3:[8,7,6],4:[8,7,1],5:[7,7,3],6:[7,7,4],7:[7,7,5],8:[7,7,6],adjacents:[41,49,51,59,60,61],isEdge:!1},{1:[8,7,3],2:[8,7,2],3:[9,7,6],4:[9,7,1],5:[8,6,3],6:[8,6,4],7:[8,6,5],8:[8,6,6],adjacents:[41,43,50,52,61],isEdge:!1},{1:[10,7,2],2:[10,7,1],3:[10,6,5],4:[10,6,6],5:[9,7,2],6:[9,7,3],7:[9,7,4],8:[9,7,5],adjacents:[43,51,61,62],isEdge:!0},{1:[1,8,6],2:[1,8,5],3:[0,8,3],4:[0,8,4],5:[1,9,6],6:[1,9,1],7:[1,9,2],8:[1,9,3],adjacents:[45,54],isEdge:!0},{1:[2,7,1],2:[2,7,6],3:[1,7,4],4:[1,7,5],5:[1,8,1],6:[1,8,2],7:[1,8,3],8:[1,8,4],adjacents:[45,46,53,55],isEdge:!0},{1:[3,8,5],2:[3,8,6],3:[2,8,2],4:[2,8,3],5:[2,7,5],6:[2,7,4],7:[2,7,3],8:[2,7,2],adjacents:[47,54,56],isEdge:!0},{1:[4,7,1],2:[4,7,6],3:[3,7,4],4:[3,7,5],5:[3,8,1],6:[3,8,2],7:[3,8,3],8:[3,8,4],adjacents:[47,48,55,57],isEdge:!0},{1:[5,8,1],2:[5,8,6],3:[4,7,4],4:[4,7,5],5:[4,8,1],6:[4,8,2],7:[4,8,3],8:[4,8,4],adjacents:[48,56,58],isEdge:!0},{1:[6,8,5],2:[6,8,6],3:[5,9,2],4:[5,9,1],5:[5,8,5],6:[5,8,4],7:[5,8,3],8:[5,8,2],adjacents:[49,57,59],isEdge:!0},{1:[7,8,1],2:[7,8,6],3:[6,7,4],4:[6,7,5],5:[6,8,1],6:[6,8,2],7:[6,8,3],8:[6,8,4],adjacents:[49,50,58,60],isEdge:!0},{1:[8,8,1],2:[8,8,6],3:[7,8,4],4:[7,8,5],5:[7,9,1],6:[7,9,2],7:[7,9,3],8:[7,9,4],adjacents:[50,59,61],isEdge:!0},{1:[8,7,5],2:[8,7,4],3:[8,8,2],4:[8,8,3],5:[9,8,5],6:[9,8,6],7:[9,8,1],8:[9,8,2],adjacents:[50,51,52,60,62],isEdge:!0},{1:[10,7,6],2:[10,7,5],3:[9,8,3],4:[9,8,4],5:[10,8,6],6:[10,8,1],7:[10,8,2],8:[10,8,3],adjacents:[52,61],isEdge:!0}]}},931:(e,t,i)=>{e.exports={HexGrid:i(330),TriHexGrid:i(321),Board:i(303),Piece:i(13),maps:{board:{default:i(778)},renderer:{default:i(331)}},TexturePack:i(705),Renderer:i(492)}}},t={},function i(s){var n=t[s];if(void 0!==n)return n.exports;var r=t[s]={exports:{}};return e[s](r,r.exports,i),r.exports}(931);var e,t});