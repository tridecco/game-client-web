<!DOCTYPE html>
<html lang="en">

<head>
  <%- include("../../../partials/head.ejs") %>
  <title>Tridecco | Complete Password Reset</title>
  <script src="<%= env.CDN_URL %>/js/auth.js"></script>
</head>

<body class="h-screen overflow-hidden" style="background: url('<%= env.CDN_URL %>/img/backgrounds/wooden-board.jpg') center center / cover no-repeat;">
  <!-- Tridecco Background Container -->
  <div id="board-container" class="absolute top-0 left-0 w-full h-full"></div>

  <!-- Background Overlay with Blur -->
  <div class="absolute inset-0 bg-black bg-opacity-50 backdrop-filter backdrop-blur-lg"></div>

  <!-- Centered Auth Form Container -->
  <div class="fixed inset-0 flex items-center justify-center">
    <div class="bg-white bg-opacity-90 p-8 rounded-lg shadow-xl w-96 max-w-sm backdrop-filter backdrop-blur-md">
      <h2 class="text-2xl font-bold text-center mb-6 text-gray-800">Reset Password</h2>
      <form id="auth-form" class="space-y-4">
        <div class="mb-4">
          <label for="password" class="block text-gray-700 text-sm font-bold mb-2">New Password</label>
          <input type="password" id="password" required class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" placeholder="Enter your new password">
        </div>
        <div class="mb-4">
          <label for="confirm-password" class="block text-gray-700 text-sm font-bold mb-2">Confirm Password</label>
          <input type="password" id="confirm-password" required class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" placeholder="Confirm your new password">
        </div>
        <div class="flex items-center justify-between">
          <button id="complete-password-reset" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-md focus:outline-none focus:shadow-outline w-full transition duration-200">
            Reset Password
          </button>
        </div>
      </form>
    </div>
  </div>

  <script>
    // Initialize authentication module
    const auth = new Authentication(app);
    const completePasswordResetButton = document.getElementById("complete-password-reset");

    // Add click event listener to the reset password button
    completePasswordResetButton.addEventListener("click", async (event) => {
      event.preventDefault(); // Prevent form submission

      if (!app.online) {
        app.ui.alert(
          "You are offline. Please check your internet connection.",
          "warning",
          3000,
        );
        return;
      }

      completePasswordResetButton.disabled = true; // Disable button during processing

      const token = app.location.params.token; // Get token for password reset
      const password = document.getElementById("password").value; // Get entered password
      const confirmPassword = document.getElementById("confirm-password").value; // Get confirmed password

      // Check if passwords match
      if (password !== confirmPassword) {
        completePasswordResetButton.disabled = false; // Re-enable button if passwords do not match
        app.ui.notification(
          "alert",
          "Passwords do not match",
          "error",
          document.getElementById("auth-form"),
          "reset"
        );
        return;
      }

      // Attempt to complete password reset
      try {
        const response = await auth.completePasswordReset(token, password);
        if (response.status === "success") {
          document.getElementById("auth-form").innerHTML = ""; // Clear the form on success
          app.ui.notification(
            "alert",
            response.message,
            "success",
            document.getElementById("auth-form"),
            "reset"
          );
          setTimeout(() => {
            app.location.redirect("/login"); // Redirect to login after a short delay
          }, 2000);
        } else {
          completePasswordResetButton.disabled = false; // Re-enable button on error
          // Handle specific error for invalid password
          if (response.error.code === "INVALID_PASSWORD") {
            app.ui.notification(
              "list",
              [
                "Password must be at least 8 characters long",
                "Password must contain at least one uppercase letter",
                "Password must contain at least one lowercase letter",
                "Password must contain at least one number",
                "Password must contain at least one special character",
              ],
              "error",
              document.getElementById("auth-form"),
              "reset"
            );
            return;
          }
          // General error notification
          app.ui.notification(
            "alert",
            response.message,
            "error",
            document.getElementById("auth-form"),
            "reset"
          );
        }
      } catch (error) {
        completePasswordResetButton.disabled = false; // Re-enable button on error
        app.ui.notification(
          "alert",
          "An error occurred. Please try again.",
          "error",
          document.getElementById("auth-form"),
          "reset"
        );
      }
    });
  </script>

  <%- include("../../../partials/tridecco-board-animator.ejs") %>
</body>

</html>