<!DOCTYPE html>
<html lang="en">

<head>
  <%- include("../../../partials/head.ejs") %>
  <title>Tridecco | Security</title>
  <script src="<%= env.CDN_URL %>/js/user.js"></script>
  <style>
    .table-cell-break {
      word-break: break-word;
    }

    .pagination-button:disabled {
      opacity: 0.5;
      cursor: not-allowed;
    }

    .table-scroll-wrapper {
      overflow-x: auto;
      -webkit-overflow-scrolling: touch;
    }
  </style>
</head>

<body class="h-screen overflow-hidden" style="background: #8e5e4d url('<%= env.CDN_URL %>/img/backgrounds/wooden-board.jpg') center center / cover no-repeat;">
  <!-- Tridecco Background Container -->
  <div id="board-container" class="absolute top-0 left-0 w-full h-full"></div>

  <!-- Background Overlay with Blur -->
  <div class="absolute inset-0 bg-black bg-opacity-50 backdrop-filter backdrop-blur-lg"></div>

  <!-- Main Layout Container -->
  <div class="fixed inset-0 flex flex-col h-screen text-gray-800 z-20">
    <!-- Main Content Flex Container -->
    <div class="flex flex-1 w-full h-full p-3 md:p-4 gap-3 md:gap-4 overflow-hidden max-w-7xl mx-auto z-10">
      <!-- Left Sidebar: Navigation -->
      <%- include("../../../partials/navigation-bar.ejs", { page: "security" }) %>

      <!-- Main Content Area -->
      <main class="flex-1 flex flex-col overflow-hidden">

        <!-- Mobile Top Bar: Back Button -->
        <header class="lg:hidden flex items-center bg-white/80 backdrop-blur-sm rounded-xl shadow-lg border border-amber-700/30 p-3 mb-3 flex-shrink-0">
          <a href="/more" class="p-2 rounded-full bg-amber-100/50 hover:bg-amber-200/70 border border-amber-300/50 text-amber-700 hover:text-amber-800 transition duration-200">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
            </svg>
          </a>
          <span class="ml-3 text-lg font-semibold text-amber-900">Security Records</span>
        </header>

        <section class="flex-1 bg-white/80 backdrop-blur-sm rounded-xl shadow-inner border border-amber-700/20 p-4 md:p-6 overflow-y-auto custom-scrollbar max-h-full">
          <h2 class="text-2xl font-bold mb-6 text-amber-900 hidden lg:block">Security Records</h2>

          <!-- Skeleton Loader -->
          <div id="skeleton-loader">
            <div class="animate-pulse">
              <div class="bg-amber-100 rounded-t-lg p-3 flex space-x-4">
                <div class="h-4 bg-gray-200 rounded w-1/6"></div>
                <div class="h-4 bg-gray-200 rounded w-1/4"></div>
                <div class="h-4 bg-gray-200 rounded w-1/6"></div>
                <div class="h-4 bg-gray-200 rounded w-1/4"></div>
                <div class="h-4 bg-gray-200 rounded w-1/6"></div>
              </div>
              <div class="space-y-2 mt-2 p-3 bg-gray-50 rounded-b-lg">
                <% for(let i = 0; i < 15; i++) { %>
                <div class="flex space-x-4">
                  <div class="h-4 bg-gray-200 rounded w-1/6"></div>
                  <div class="h-4 bg-gray-200 rounded w-1/4"></div>
                  <div class="h-4 bg-gray-200 rounded w-1/6"></div>
                  <div class="h-4 bg-gray-200 rounded w-1/4"></div>
                  <div class="h-4 bg-gray-200 rounded w-1/6"></div>
                </div>
                <% } %>
              </div>
              <div class="flex justify-between mt-4">
                <div class="h-8 bg-gray-200 rounded w-20"></div>
                <div class="h-8 bg-gray-200 rounded w-20"></div>
              </div>
            </div>
          </div>

          <!-- Security Records Display Area -->
          <div id="security-records-area" class="hidden">
            <!-- Info Text -->
            <p class="text-sm text-gray-600 mb-4">
              Below are recent security-related events for your account. Only the latest 100 records are stored.
              If you notice any suspicious activity, please
              <a href="/user/account#password-form" class="text-blue-600 hover:text-blue-800 hover:underline font-medium">
                change your password immediately
              </a>.
            </p>

            <!-- Records Table Wrapper for Scrolling -->
            <div class="table-scroll-wrapper bg-white rounded-lg shadow border border-amber-200">
              <table class="w-full text-sm text-left text-gray-700 min-w-[600px]">
                <thead class="text-xs text-amber-800 uppercase bg-amber-100">
                  <tr>
                    <th scope="col" class="px-4 py-3 sticky left-0 bg-amber-100 z-10">Type</th>
                    <th scope="col" class="px-4 py-3">Date</th>
                    <th scope="col" class="px-4 py-3">IP Address</th>
                    <th scope="col" class="px-4 py-3">Device / Browser</th>
                    <th scope="col" class="px-4 py-3">Details</th>
                  </tr>
                </thead>
                <tbody id="records-table-body" class="divide-y divide-amber-100">
                  <tr id="no-records-row" class="hidden">
                    <td colspan="5" class="px-4 py-4 text-center text-gray-500 italic">No security records found.</td>
                  </tr>
                </tbody>
              </table>
            </div>

            <!-- Pagination Controls -->
            <div class="flex justify-between items-center mt-4">
              <button id="prev-page-button" class="pagination-button bg-blue-600 hover:bg-blue-700 text-white font-bold py-1 px-3 rounded text-sm disabled:opacity-50 disabled:cursor-not-allowed">
                Previous
              </button>
              <span id="page-info" class="text-sm text-gray-600">Page 1</span>
              <button id="next-page-button" class="pagination-button bg-blue-600 hover:bg-blue-700 text-white font-bold py-1 px-3 rounded text-sm disabled:opacity-50 disabled:cursor-not-allowed">
                Next
              </button>
            </div>
          </div>
        </section>

      </main>
    </div>
  </div>

  <script>
    const skeletonLoader = document.getElementById("skeleton-loader");
    const securityRecordsArea = document.getElementById("security-records-area");
    const recordsTableBody = document.getElementById("records-table-body");
    const noRecordsRow = document.getElementById("no-records-row");
    const prevPageButton = document.getElementById("prev-page-button");
    const nextPageButton = document.getElementById("next-page-button");
    const pageInfo = document.getElementById("page-info");

    // Initialize user module
    const user = new User(app);

    // Pagination state
    let currentPage = 1;
    const limit = 15; // Number of records per page
    let hasMorePages = true; // Assume there are more pages initially

    // Function to format date
    function formatRecordDate(dateString) {
      if (!dateString) return '--';
      try {
        const date = new Date(dateString);
        return date.toLocaleString(undefined, {
          year: 'numeric',
          month: 'short',
          day: 'numeric',
          hour: 'numeric',
          minute: '2-digit',
          hour12: true
        });
      } catch (e) {
        return dateString;
      }
    }

    // Function to format record type
    function formatRecordType(type) {
      const typeMap = {
        'login': 'Login',
        'password.reset': 'Password Reset',
        'password.change': 'Password Change',
        'email.change': 'Email Change',
        'suspension': 'Account Suspension',
        'unsuspension': 'Account Unsuspension'
      };
      return typeMap[type] || type;
    }

    // Function to parse user agent string
    function parseUserAgent(ua) {
      if (!ua) return {
        display: '--',
        full: ''
      };

      let browser = 'Unknown Browser';
      let os = 'Unknown OS';

      // OS Detection (Common cases)
      if (/Windows/i.test(ua)) os = 'Windows';
      else if (/Macintosh|Mac OS X/i.test(ua)) os = 'macOS';
      else if (/Linux/i.test(ua)) os = 'Linux';
      else if (/Android/i.test(ua)) os = 'Android';
      else if (/iPhone|iPad|iPod/i.test(ua)) os = 'iOS';

      // Browser Detection (Order matters, check more specific first)
      if (/Edg/i.test(ua)) browser = 'Edge'; // Edge (Chromium based)
      else if (/OPR|Opera/i.test(ua)) browser = 'Opera';
      else if (/Chrome/i.test(ua)) browser = 'Chrome';
      else if (/Safari/i.test(ua)) browser = 'Safari';
      else if (/Firefox/i.test(ua)) browser = 'Firefox';
      else if (/MSIE|Trident/i.test(ua)) browser = 'IE';

      let display = `${browser} on ${os}`;
      if (browser === 'Unknown Browser' && os === 'Unknown OS') display = 'Unknown Device';
      else if (browser === 'Unknown Browser') display = `Unknown Browser on ${os}`;
      else if (os === 'Unknown OS') display = `${browser} on Unknown OS`;

      return {
        display: display,
        full: ua
      };
    }

    // Function to fetch and display records
    async function fetchAndDisplayRecords(page) {
      skeletonLoader.classList.remove("hidden");
      securityRecordsArea.classList.add("hidden");
      noRecordsRow.classList.add('hidden');

      const offset = (page - 1) * limit;

      try {
        const response = await user.getSafetyRecords(limit, offset);

        recordsTableBody.innerHTML = ''; // Clear previous records

        if (response.status === "success" && response.data) {
          const records = response.data;

          if (records.length === 0) {
            hasMorePages = false;
            if (page === 1) {
              noRecordsRow.classList.remove('hidden');
              recordsTableBody.appendChild(noRecordsRow);
            }
          } else {
            hasMorePages = records.length === limit;

            records.forEach(record => {
              const row = document.createElement("tr");
              row.classList.add("hover:bg-amber-50", "transition-colors", "duration-150");
              const uaInfo = parseUserAgent(record.userAgent); // Parse the user agent

              row.innerHTML = `
                <td class="px-4 py-2 font-medium text-amber-900 whitespace-nowrap sticky left-0 bg-white hover:bg-amber-50 z-10">${formatRecordType(record.type)}</td>
                <td class="px-4 py-2 whitespace-nowrap">${formatRecordDate(record.date)}</td>
                <td class="px-4 py-2 whitespace-nowrap">${record.ip || '--'}</td>
                <td class="px-4 py-2 whitespace-nowrap" title="${uaInfo.full}">${uaInfo.display}</td>
                <td class="px-4 py-2 table-cell-break">${record.details || '--'}</td>
              `;
              recordsTableBody.appendChild(row);
            });
          }
        } else {
          hasMorePages = false;
          const errorRow = document.createElement("tr");
          errorRow.innerHTML = `<td colspan="5" class="px-4 py-4 text-center text-red-600 italic">Could not load records. Please try again later.</td>`;
          recordsTableBody.appendChild(errorRow);
        }

      } catch (error) {
        hasMorePages = false;
        recordsTableBody.innerHTML = `<td colspan="5" class="px-4 py-4 text-center text-red-600 italic">An unexpected error occurred.</td>`;
      } finally {
        skeletonLoader.classList.add("hidden");
        securityRecordsArea.classList.remove("hidden");
        updatePaginationControls();
      }
    }

    // Function to update pagination buttons and info
    function updatePaginationControls() {
      pageInfo.textContent = `Page ${currentPage}`;
      prevPageButton.disabled = currentPage <= 1;
      nextPageButton.disabled = !hasMorePages;
    }

    // Event Listeners for Pagination
    prevPageButton.addEventListener("click", () => {
      if (currentPage > 1) {
        currentPage--;
        fetchAndDisplayRecords(currentPage);
      }
    });
    nextPageButton.addEventListener("click", () => {
      if (hasMorePages) {
        currentPage++;
        fetchAndDisplayRecords(currentPage);
      }
    });

    // Initial Load
    fetchAndDisplayRecords(currentPage);
  </script>

  <%- include("../../../partials/tridecco-board-animator.ejs") %>
</body>

</html>