<!DOCTYPE html>
<html lang="en">

<head>
    <%- include("../../components/head") %>
    <script src="/js/my.js"></script>
    <meta name="description" content="View and manage your active and past user sessions on Tridecco. Monitor session activity and ensure your account's security.">
    <title>Tridecco | User Sessions</title>
    <script>
        (async () => {
            const sessionStatus = await app.session.check();
            if (sessionStatus.authenticated === true && sessionStatus.twoFactorAuthenticated === false) {
                window.location.href = "/two-factor-authentication";
            } else if (sessionStatus.authenticated === false) {
                window.location.href = "/login";
            }
        })();
    </script>
</head>

<body class="bg-gray-100 flex items-center justify-center min-h-screen">
    <div class="container mx-auto p-4 flex items-center justify-center">
        <div class="flex flex-col md:flex-row w-full space-y-4 md:space-y-0 md:space-x-4">
            <!-- Sidebar -->
            <div class="w-full md:w-1/4 bg-white shadow-lg rounded-lg p-6 flex flex-col">
                <a href="/" class="flex items-center text-gray-500 mb-4">
                    ‚Üê Return to Home
                </a>
                <h2 class="text-2xl font-bold text-gray-900 mb-4">My Account</h2>
                <ul>
                    <li class="mb-4">
                        <a href="/my" class="text-gray-600 hover:text-indigo-600">User Profile</a>
                    </li>
                    <li class="mb-4">
                        <a href="/my/settings" class="text-gray-600 hover:text-indigo-600">User Settings</a>
                    </li>
                    <li class="mb-4">
                        <a href="/my/game-records" class="text-gray-600 hover:text-indigo-600">User Game Records</a>
                    </li>
                    <li class="mb-4">
                        <a href="/my/security-records" class="text-gray-600 hover:text-indigo-600">User Security
                            Records</a>
                    </li>
                    <li class="mb-4">
                        <a class="text-indigo-600 font-semibold">User Sessions</a>
                    </li>
                    <li class="mb-4">
                        <a href="/logout" class="text-gray-600 hover:text-red-600">Logout</a>
                    </li>
                </ul>
            </div>

            <!-- Main Content -->
            <div class="w-full md:w-3/4 bg-white shadow-lg rounded-lg p-6 flex flex-col">
                <div class="max-w-full max-w-2xl mx-auto">
                    <h2 class="text-2xl font-bold text-gray-900 mb-6">Session Management</h2>
                    <div class="mb-4">
                        <button id="remove-all-sessions"
                            class="bg-red-600 hover:bg-red-700 text-white font-semibold py-2 px-4 rounded-lg">
                            Remove All Other Sessions
                        </button>
                    </div>
                    <div id="sessions" class="grid grid-cols-1 sm:grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-4">
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>
        // Add event listener to window load
        window.addEventListener("DOMContentLoaded", async () => {
            // Get user ID from session
            const userId = (await app.session.check()).userId;

            // New my instance
            const my = new My(userId);

            // Function to add 1 session to the list
            function addSession(session) {
                // Get sessions element
                const sessions = document.getElementById("sessions");

                // Create session item
                const sessionItem = document.createElement("div");

                // Add classes and inner HTML
                sessionItem.classList.add("session-item", "bg-gray-100", "rounded-lg", "border-8", "border-transparent", "border-opacity-0", "flex", "items-center",
                    "justify-between");
                sessionItem.innerHTML += `
                    <div>
                        ${session.require2FA ? '<p class="text-orange-500"><strong>Still not passed 2FA</strong></p>' : ""}
                        <p><strong>Created At:</strong> ${new Date(session.createdAt).toLocaleString()}</p>
                        <p><strong>IP Address:</strong> ${session.ip}</p>
                        <p><strong>Device:</strong> ${session.userAgent}</p>
                    </div>
                `;

                // Create remove button
                const removeButton = document.createElement("button");
                removeButton.classList.add("remove-session", "bg-red-600", "hover:bg-red-700", "text-white",
                    "font-semibold", "py-1", "px-3", "rounded-lg");
                removeButton.textContent = "Remove";

                // Add event listener to remove button
                removeButton.addEventListener("click", async () => {
                    const response = await my.removeSession(session.id);
                    if (response.status === "success") {
                        // Remove session item
                        sessionItem.remove();
                    } else {
                        // Show error notification
                        app.notification(
                            "alert",
                            response.message,
                            "error",
                            document.getElementById("sessions")
                        );
                    }
                });

                // Append remove button to session item
                sessionItem.appendChild(removeButton);

                // Append session item to sessions
                sessions.appendChild(sessionItem);
            }

            // Function to get sessions and add to list
            async function getSessions() {
                const sessions = await my.getSessions();
                sessions.forEach(session => {
                    addSession({ id: session._id, require2FA: session.session.require2FA, ...session.session.clientInfo });
                });
            }

            // Get sessions
            getSessions();

            // Add event listener to remove all sessions button
            document.getElementById("remove-all-sessions").addEventListener("click", async () => {
                // Remove all sessions
                const response = await my.removeAllSessions();

                // Display notification
                if (response.status === "success") {
                    window.location.reload();
                } else {
                    app.notification(
                        "alert",
                        response.message,
                        "error",
                        document.getElementById("sessions")
                    );
                }
            });
        });
    </script>
</body>

</html>