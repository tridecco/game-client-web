<!DOCTYPE html>
<html lang="en">

<head>
    <%- include("../../components/head") %>
    <script src="/js/auth.js"></script>
    <title>Two Factor Authentication</title>
    <script>
        (async () => {
            const sessionStatus = await app.session.check();
            if (sessionStatus.authenticated === true && sessionStatus.twoFactorAuthenticated === true) {
                window.location.href = '/';
            } else if (sessionStatus.authenticated === false) {
                window.location.href = '/login';
            }
        })();
    </script>
</head>

<body class="h-full">
    <div class="flex min-h-full flex-col justify-center px-6 py-12 lg:px-8">
        <div class="sm:mx-auto sm:w-full sm:max-w-sm">
            <div class="mx-auto flex items-center justify-center h-10 w-10 bg-indigo-500 rounded-full">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" stroke="currentColor" stroke-linecap="round"
                    stroke-linejoin="round" stroke-width="2" class="w-6 h-6 text-white p-1" viewBox="0 0 24 24">
                    <path d="M12 2L2 7l10 5 10-5-10-5zM2 17l10 5 10-5M2 12l10 5 10-5"></path>
                </svg>
            </div>
            <h2 class="mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900">Two-Factor
                Authentication</h2>
        </div>

        <div id="auth-form" class="mt-10 sm:mx-auto sm:w-full sm:max-w-sm">
            <form class="space-y-6">
                <div>
                    <label for="verification-code"
                        class="block text-sm font-medium leading-6 text-gray-900">Verification Code</label>
                    <div class="mt-2">
                        <input id="verification-code" name="verification-code" type="text" required
                            class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
                    </div>
                </div>

                <div>
                    <button id="get-code-button" type="button"
                        class="flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">Get
                        Code</button>
                </div>

                <div>
                    <button id="submit-button" type="button"
                        class="flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">Submit</button>
                </div>
            </form>

            <p class="mt-6 text-center text-sm text-gray-500">
                Didn't receive the code?
                <button id="resend-code-button" type="button"
                    class="font-semibold leading-6 text-indigo-600 hover:text-indigo-500">Resend Code</button>
            </p>
        </div>
    </div>
    <script>
        // New auth instance
        const auth = new Auth();

        // Get the email from local storage (set in the login page)
        const email = localStorage.getItem("userEmail");

        // Get code button
        const getCodeButton = document.getElementById('get-code-button');

        // Add event listener to get code button
        getCodeButton.addEventListener('click', async () => {
            // Disable the get code button
            getCodeButton.disabled = true;

            // Set the time left to 60
            let timeLeft = 60;
            const interval = setInterval(() => {
                timeLeft--;
                getCodeButton.textContent = `Get Code (${timeLeft})`;

                if (timeLeft === 0) {
                    clearInterval(interval);
                    getCodeButton.textContent = 'Get Code';
                    getCodeButton.disabled = false;
                }
            }, 1000);

            // Get email verification code
            const response = await await auth.getEmailVerificationCode(email);

            // Display notification
            if (response.status === "success") {
                app.notification(
                    "alert",
                    response.message,
                    "success",
                    document.getElementById("auth-form")
                );
            } else {
                app.notification(
                    "alert",
                    response.message,
                    "error",
                    document.getElementById("auth-form")
                );
            }
        });

        // Submit button
        const submitButton = document.getElementById('submit-button');

        // Add event listener to submit button
        submitButton.addEventListener('click', async () => {
            // Get verification code
            const verificationCode = document.getElementById('verification-code').value;

            // Submit verification code for 2FA
            const response = await auth.twoFactorAuthentication(verificationCode);

            // Display notification
            if (data.status === "success") {
                // Redirect to home page after 2 seconds
                setTimeout(() => {
                    window.location.href = "/";
                }, 2000);

                // Remove user email from local storage
                localStorage.removeItem("userEmail");

                // Show success notification
                this.lastNotification = app.notification(
                    "alert",
                    data.message,
                    "success",
                    document.getElementById("auth-form")
                );
            } else {
                // Show error notification
                if (data.error.code === "NOT_LOGGED_IN") {
                    window.location.href = "/login";
                }

                // Show error notification
                this.lastNotification = app.notification(
                    "alert",
                    data.message,
                    "error",
                    document.getElementById("auth-form")
                );
            }
        });

        // Resend code button
        const resendCodeButton = document.getElementById('resend-code-button');

        // Add event listener to resend code button
        resendCodeButton.addEventListener('click', async () => {
            // Disable the resend code button
            resendCodeButton.disabled = true;

            // Set the time left to 60
            let timeLeft = 60;
            const interval = setInterval(() => {
                timeLeft--;
                resendCodeButton.textContent = `Get Code (${timeLeft})`;

                if (timeLeft === 0) {
                    clearInterval(interval);
                    resendCodeButton.textContent = 'Get Code';
                    resendCodeButton.disabled = false;
                }
            }, 1000);

            // Get email verification code
            const response = await auth.getEmailVerificationCode(email);

            // Display notification
            if (response.status === "success") {
                app.notification(
                    "alert",
                    response.message,
                    "success",
                    document.getElementById("auth-form")
                );
            } else {
                app.notification(
                    "alert",
                    response.message,
                    "error",
                    document.getElementById("auth-form")
                );
            }
        });
    </script>
</body>

</html>